import cv2
import numpy as np
import matplotlib.pyplot as plt
def adaptive_hist_equalization(img, tile_size=(8, 8)):

 h, w = img.shape
 th, tw = tile_size

 out = np.zeros_like(img)

 for i in range(0, h, th):
 for j in range(0, w, tw):

     tile = img[i:min(i+th, h), j:min(j+tw, w)]

 equalized_tile = cv2.equalizeHist(tile)

 out[i:min(i+th, h), j:min(j+tw, w)] = equalized_tile
 return out
img = cv2.imread("E:\study5sem\lab\download (1).jpg", 0)
ahe_img = adaptive_hist_equalization(img, tile_size=(32, 32))
clahe = cv2.createCLAHE(clipLimit=2.0, tileGridSize=(8, 8))
clahe_img = clahe.apply(img)
plt.figure(figsize=(15, 5))
plt.subplot(1, 3, 1)
plt.imshow(img, cmap='gray')
plt.title('Original')
plt.axis('off')
plt.subplot(1, 3, 2)
plt.imshow(ahe_img, cmap='gray')
plt.title('AHE (Adaptive Histogram Equalization)')
plt.axis('off')
plt.subplot(1, 3, 3)
plt.imshow(clahe_img, cmap='gray')
plt.title('CLAHE')
plt.axis('off')
plt.tight_layout()
plt.show()
